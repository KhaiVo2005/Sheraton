@using System.Text.Json
@using Sheraton.Models.ViewModel
@model HopDongLichDat

@{
    var dsSanh = ViewBag.DanhSachSanh as List<SanhTiec>;
    var lichDaDat = ViewBag.LichDaDat;
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Hợp đồng</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form id="formContainer" asp-action="createHopDong" method="post" onsubmit="return SaveChiTiet()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Thông tin hợp đồng -->
            <h5>Thông tin hợp đồng</h5>
            <div class="form-group">
                <label asp-for="HopDong.NgayKy" class="control-label"></label>
                <input asp-for="HopDong.NgayKy" class="form-control" />
                <span asp-validation-for="HopDong.NgayKy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HopDong.TienCoc" class="control-label"></label>
                <input asp-for="HopDong.TienCoc" class="form-control" />
                <span asp-validation-for="HopDong.TienCoc" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HopDong.SoLuong" class="control-label"></label>
                <input asp-for="HopDong.SoLuong" class="form-control" />
                <span asp-validation-for="HopDong.SoLuong" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HopDong.MaKH" class="control-label"></label>
                <select asp-for="HopDong.MaKH" class="form-control" asp-items="ViewBag.MaKH"></select>
            </div>
            <div class="form-group">
                <label asp-for="HopDong.MaNV" class="control-label"></label>
                <select asp-for="HopDong.MaNV" class="form-control" asp-items="ViewBag.MaNV"></select>
            </div>
            <div class="form-group">
                <label asp-for="HopDong.MaDV" class="control-label"></label>
                <select asp-for="HopDong.MaDV" class="form-control" asp-items="ViewBag.MaDV"></select>
            </div>

            <!-- Thông tin lịch đặt sảnh -->
            <h5>Thông tin lịch đặt sảnh</h5>
            <div class="form-group">
                <label asp-for="LichDatSanh.BatDau" class="control-label"></label>
                <input asp-for="LichDatSanh.BatDau" type="datetime-local" class="form-control" />
                <span asp-validation-for="LichDatSanh.BatDau" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LichDatSanh.KetThuc" class="control-label"></label>
                <input asp-for="LichDatSanh.KetThuc" type="datetime-local" class="form-control" />
                <span asp-validation-for="LichDatSanh.KetThuc" class="text-danger"></span>
            </div>

            <input type="hidden" id="MaSanh" name="LichDatSanh.MaSanh" value="@Model.LichDatSanh.MaSanh" />

            <!-- Chọn sảnh -->
            <div class="form-group">
                <label>Chọn sảnh</label>
                <div class="row">
                    @foreach (var sanh in dsSanh)
                    {
                        string colorClass = sanh.TrangThai switch
                        {
                            "Trống" => "sanh-trong",
                            "Đã đặt" => "sanh-dadat",
                            "Bảo Trì" => "sanh-baotri",
                            _ => "sanh-khac"
                        };

                        

                        bool khongChonDuoc = sanh.TrangThai == "Đã đặt" || sanh.TrangThai == "Bảo trì";
                        string pointerEventStyle = khongChonDuoc ? "pointer-events: none; opacity: 0.6;" : "";
                        string onclick = khongChonDuoc ? "" : "onclick=\"chonSanh(this)\"";


                        <div class="col-md-6 mb-2">
                            <div class="card sanh-card @colorClass"
                                 data-masan="@sanh.MaSanh"
                                 data-succhua="@sanh.SucChua"
                                 style="@pointerEventStyle"
                                @Html.Raw(onclick)>
                                <div class="card-body text-center">
                                    <h5 class="card-title">@sanh.TenSanh</h5>
                                    <p class="card-text">@sanh.SucChua người</p>
                                    <small class="trang-thai">@sanh.TrangThai</small>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!--Can lam o day-->
            <h5>Danh sách món ăn</h5>
            <div id="danhSachMonAn">
                <div class="form-row monAn-item mb-2" style="display:flex">
                    <div class="col-md-5">
                        <select class="form-control">
                            <option value="">-- Chọn món --</option>
                            @foreach (var mon in ViewBag.DanhSachMonAn)
                            {
                                <option value="@mon.MaMon">@mon.TenMon</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-5">
                        <input class="form-control" type="number" placeholder="Số lượng" min="1" />
                    </div>
                    <div class="col-md-3">
                        <select class="form-control select-trangthai" >
                            <option value="Chưa phục vụ">Chưa phục vụ</option>
                            <option value="Đã phục vụ">Đã phục vụ</option>
                        </select>
                    </div>

                    <div class="col-md-2 d-flex">
                        <button type="button" class="btn btn-success" onclick="themMonAn(this)">+</button>
                    </div>
                </div>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Tạo hợp đồng" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="getHopDong">Quay lại danh sách</a>
</div>

<!-- ✅ STYLE -->
<style>
    .sanh-card {
        cursor: pointer;
        border: 2px solid transparent;
        border-radius: 10px;
        transition: 0.3s;
    }

        .sanh-card:hover {
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
        }

    .sanh-trong {
        background-color: #e6ffe6;
    }

    .sanh-dadat {
        background-color: #dcdcdc;
    }

    .sanh-khongducho {
        background-color: #ffe6e6;
    }

    .sanh-baotri {
        background-color: #fff3cd;
    }

    .sanh-card.selected {
        border: 2px solid #007bff;
        box-shadow: 0 0 6px #007bff;
    }

    .form-row.monAn-item {
        display: flex;
        gap: 10px;
        align-items: center;
    }
</style>

<!-- ✅ SCRIPT -->
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        const lichDaDat = @Html.Raw(JsonSerializer.Serialize(ViewBag.LichDaDat));

        function chonSanh(card) {
            document.querySelectorAll(".sanh-card").forEach(el => el.classList.remove("selected"));
            card.classList.add("selected");
            const maSanh = card.getAttribute("data-masan");
            document.getElementById("MaSanh").value = maSanh;
        }

        document.addEventListener("DOMContentLoaded", function () {
            const soLuongInput = document.querySelector('input[name="HopDong.SoLuong"]');
            const batDauInput = document.querySelector('input[name="LichDatSanh.BatDau"]');
            const ketThucInput = document.querySelector('input[name="LichDatSanh.KetThuc"]');
            const allSanhCards = document.querySelectorAll(".sanh-card");

            function locTheoSoLuong() {
                const soLuong = parseInt(soLuongInput.value) || 0;
                allSanhCards.forEach(card => {
                    const sucChua = parseInt(card.getAttribute("data-succhua"));
                    card.parentElement.style.display = (sucChua >= soLuong) ? "block" : "none";
                });
            }

            function isTrungLich(maSanh, batDauMoi, ketThucMoi) {
                for (const lich of lichDaDat) {
                    if (lich.maSanh != maSanh) continue;
                    const bdCu = new Date(lich.batDau);
                    const ktCu = new Date(lich.ketThuc);
                    if (!(ketThucMoi <= bdCu || batDauMoi >= ktCu)) {
                        return true;
                    }
                }
                return false;
            }

            function locTheoThoiGian() {
                const bdStr = batDauInput.value;
                const ktStr = ketThucInput.value;
                if (!bdStr || !ktStr) return;

                const bd = new Date(bdStr);
                const kt = new Date(ktStr);

                allSanhCards.forEach(card => {
                    const maSanh = card.getAttribute("data-masan");
                    const isTrung = isTrungLich(maSanh, bd, kt);
                    const trangThaiEl = card.querySelector(".trang-thai");
                    const trangThaiText = trangThaiEl?.innerText?.trim();

                    if (trangThaiText === "Bảo trì" || card.classList.contains("sanh-baotri")) {
                        card.classList.remove("sanh-trong", "sanh-dadat");
                        card.classList.add("sanh-baotri");
                        card.style.pointerEvents = "none";
                        card.style.opacity = "0.6";
                        card.removeAttribute("onclick");
                        return;
                    }

                    if (isTrung) {
                        card.classList.add("sanh-dadat");
                        card.classList.remove("sanh-trong");
                        card.style.pointerEvents = "none";
                        card.style.opacity = "0.6";
                        trangThaiEl.innerText = "Đã đặt";
                    } else {
                        card.classList.remove("sanh-dadat");
                        card.classList.add("sanh-trong");
                        card.style.pointerEvents = "auto";
                        card.style.opacity = "1";
                        trangThaiEl.innerText = "Trống";
                        card.setAttribute("onclick", "chonSanh(this)");
                    } 
                });
            }

            // Gọi khi load lần đầu
            locTheoSoLuong();
            locTheoThoiGian();

            // Gọi khi người dùng thay đổi
            soLuongInput.addEventListener("input", locTheoSoLuong);
            batDauInput.addEventListener("change", locTheoThoiGian);
            ketThucInput.addEventListener("change", locTheoThoiGian);
        });

        

        //----------------------------------------------------------------------------------------
        function dsMonAnOptions() {
            const ds = @Html.Raw(JsonSerializer.Serialize(ViewBag.DanhSachMonAn));
            return ds.map(mon => `<option value="${mon.MaMon}">${mon.TenMon}</option>`).join("");
        }

        const dsMonAn = @Html.Raw(JsonSerializer.Serialize(ViewBag.DanhSachMonAn));
        let monAnList = [];
        let monAnIndex = 0;

        function dsMonAnOptions() {
            return dsMonAn.map(mon => `<option value="${mon.MaMon}">${mon.TenMon}</option>`).join("");
        }

        function themMonAn(btn = null) {
            if (btn) {
                const row = btn.closest(".monAn-item");
                const select = row.querySelector("select");
                const soLuong = row.querySelector("input[type='number']");
                const trangThaiInput = row.querySelector(".select-trangthai");

                if (!select.value || !soLuong.value || soLuong.value <= 0) {
                    alert("Vui lòng chọn món và nhập số lượng hợp lệ.");
                    return;
                }

                // ✅ Thêm vào mảng lưu tạm
                monAnList.push({
                    maMon: select.value,
                    soLuong: parseInt(soLuong.value),
                    trangThai: trangThaiInput.value || "Chưa phục vụ"
                });

                // Lock input
                select.setAttribute("disabled", "disabled");
                soLuong.setAttribute("readonly", "readonly");
                trangThaiInput.setAttribute("readonly", "readonly");

                // Đổi nút thành Xoá
                btn.innerText = "−";
                btn.classList.remove("btn-success");
                btn.classList.add("btn-danger");
                btn.setAttribute("onclick", "xoaMonAn(this)");

                // Nút sửa
                const editBtn = document.createElement("button");
                editBtn.type = "button";
                editBtn.className = "btn btn-warning ml-2";
                editBtn.innerText = "Sửa";
                editBtn.onclick = function () {
                    const isReadonly = soLuong.hasAttribute("readonly");

                    if (isReadonly) {
                        select.removeAttribute("disabled");
                        soLuong.removeAttribute("readonly");
                        trangThaiInput.removeAttribute("readonly");
                        editBtn.innerText = "Lưu";
                    } else {
                        const updatedMaMon = select.value; // ✅ Lấy lại maMon tại đây
                        const index = monAnList.findIndex(m => m.maMon === updatedMaMon);
                        if (index !== -1) {
                            monAnList[index].soLuong = parseInt(soLuong.value);
                            monAnList[index].trangThai = trangThaiInput.value || "Chưa phục vụ";
                        }

                        select.setAttribute("disabled", true);
                        soLuong.setAttribute("readonly", true);
                        trangThaiInput.setAttribute("readonly", true);
                        editBtn.innerText = "Sửa";
                    }
                };
                btn.parentElement.appendChild(editBtn);
            }

            // Thêm dòng mới
            const danhSach = document.getElementById("danhSachMonAn");
            const div = document.createElement("div");
            div.className = "form-row monAn-item mb-2";
            div.style.display = "flex";
            div.style.gap = "10px";
            div.style.alignItems = "center";

            div.innerHTML = `
                <div class="col-md-5">
                    <select class="form-control">
                        <option value="">-- Chọn món --</option>
                        ${dsMonAnOptions()}
                    </select>
                </div>
                <div class="col-md-5">
                    <input class="form-control" type="number" placeholder="Số lượng" min="1" />
                </div>
                <div class="col-md-3">
                    <select class="form-control select-trangthai">
                        <option value="Chưa phục vụ">Chưa phục vụ</option>
                        <option value="Đã phục vụ">Đã phục vụ</option>
                    </select>
                </div>

                <div class="col-md-2 d-flex">
                    <button type="button" class="btn btn-success" onclick="themMonAn(this)">+</button>
                </div>
            `;
            danhSach.appendChild(div);
            monAnIndex++;

            console.log("Danh sách món ăn hiện tại:", monAnList);
        }

        function xoaMonAn(btn) {
            const row = btn.closest(".monAn-item");
            const select = row.querySelector("select");
            const maMon = select.value;
            monAnList = monAnList.filter(m => m.maMon !== maMon); // ❌ Remove khỏi mảng
            row.remove();
        }

        // ✅ Trước khi submit, tạo hidden input từ mảng
        function insertMonAnHiddenInputs() {
            const form = document.querySelector("form");

            // Xoá hidden cũ
            document.querySelectorAll(".monan-hidden").forEach(e => e.remove());

            monAnList.forEach((item, index) => {
                const container = document.createElement("div");
                container.classList.add("monan-hidden");
                container.innerHTML = `
                    <input type="hidden" name="MonAns[${index}].MaMon" value="${item.maMon}" />
                    <input type="hidden" name="MonAns[${index}].SoLuong" value="${item.soLuong}" />
                    <input type="hidden" name="MonAns[${index}].TrangThai" value="${item.trangThai}" />
                `;
                form.appendChild(container);
            });
        }

        function SaveChiTiet() {
            document.querySelectorAll(".generated-monAn").forEach(e => e.remove());

            const form = document.getElementById("formContainer");

            monAnList.forEach((item, index) => {
                const fields = [
                    { name: "MaMon", value: item.maMon },
                    { name: "SoLuong", value: item.soLuong },
                    { name: "TrangThai", value: item.trangThai }
                ];

                fields.forEach(f => {
                    const input = document.createElement("input");
                    input.type = "hidden";
                    input.name = `monAns[${index}].${f.name}`;
                    input.value = f.value;
                    input.classList.add("generated-monAn");
                    form.appendChild(input);
                });
            });

            return true; // Cho phép submit tiếp tục
        }
    </script>
}